/*
 * Copyright 2021 Monis Agent Corporation. All rights reserved.
 * SPDX-License-Identifier: Apache-2.0
 */

'use strict'

const monisagent = require('monisagent') // eslint-disable-line node/no-extraneous-require

/*
For context on how to use this call and its partner call insertDistributedTraceHeaders, first read Enable distributed tracing with agent APIs:

https://docs.monisagent.com/docs/distributed-tracing/enable-configure/language-agents-enable-distributed-tracing/

`transactionHandle.acceptDistributedTraceHeaders` is used to instrument the called service for inclusion in a distributed trace. It links the spans in a trace by accepting a payload generated by `insertDistributedTraceHeaders` or generated by some other W3C Trace Context compliant tracer. This method accepts the headers of an incoming request, looks for W3C Trace Context headers, and if not found, falls back to Monis Agent distributed trace headers. This method replaces the deprecated (and now removed as of version 7.0.0) acceptDistributedTracePayload method, which only handles Monis Agent distributed trace payloads.

Accepted transport types include:

- AMQP
- HTTP
- HTTPS
- IronMQ
- JMS
- Kafka
- Other
- Queue
- Unknown

Accepted header keys include:

- `traceparent`: A W3C Trace Context header.
- `monisagent`: Monis Agent distributed trace header.
*/

monisagent.startBackgroundTransaction('myCustomTransaction', function handle() {
  const transaction = monisagent.getTransaction()
  transaction.acceptDistributedTraceHeaders('Kafka', { traceparent: 'payload' })
  transaction.end()
})
